// <auto-generated />
using System;
using AdvancedEFCoreExamples.Domains.CRM.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdvancedEFCoreExamples.Migrations
{
    [DbContext(typeof(CrmContext))]
    [Migration("20210906083247_CrmCityCoordsNullable")]
    partial class CrmCityCoordsNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.CallOutcome", b =>
                {
                    b.Property<int>("CallId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CallId");

                    b.ToTable("Outcomes");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.City", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("Latitude")
                        .HasColumnType("bigint");

                    b.Property<long?>("Longitude")
                        .HasColumnType("bigint");

                    b.HasKey("Name", "CountryCode");

                    b.HasIndex("CountryCode");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityCountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextCall")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityName", "CityCountryCode");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Call", b =>
                {
                    b.HasOne("AdvancedEFCoreExamples.Domains.CRM.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("AdvancedEFCoreExamples.Domains.CRM.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.CallOutcome", b =>
                {
                    b.HasOne("AdvancedEFCoreExamples.Domains.CRM.Call", "Call")
                        .WithOne("Outcome")
                        .HasForeignKey("AdvancedEFCoreExamples.Domains.CRM.CallOutcome", "CallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Call");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.City", b =>
                {
                    b.HasOne("AdvancedEFCoreExamples.Domains.CRM.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Customer", b =>
                {
                    b.HasOne("AdvancedEFCoreExamples.Domains.CRM.City", "City")
                        .WithMany()
                        .HasForeignKey("CityName", "CityCountryCode");

                    b.Navigation("City");
                });

            modelBuilder.Entity("AdvancedEFCoreExamples.Domains.CRM.Call", b =>
                {
                    b.Navigation("Outcome");
                });
#pragma warning restore 612, 618
        }
    }
}
